name: model

# Were we can define the inputs that our action will accept
inputs:
  modelName:  
    required: true
    default: "bert_base_mrpc"
  framework:
    required: true
    default: "pytorch"
  ref_id:
    required: true
    default: 1

env:
  DOCKER_CONFIG_NAME: "commonDockerConfig"
  REPO_NAME: "intel-extension-for-transformers"
  REPO_TAG: "py38"
  DOCKER_FILE_NAME: "devel"
  CONTAINER_NAME: "modelTest"

jobs:
  model-test:
    runs-on: ubuntu-latest
    steps:
      - name: Docker Build
        run: |
          docker build -f ${{ github.workspace }}/.github/workflows/docker/${{ env.DOCKER_FILE_NAME }}.dockerfile -t ${{ env.REPO_NAME }}:${{ env.REPO_TAG }} .

      - name: Docker Run
        run: |
          docker run -dit --disable-content-trust --privileged --name=${{ env.CONTAINER_NAME }} --shm-size="2g" \
          -v ${{ github.workspace }}:/intel-extension-for-transformers \
          ${{ env.REPO_NAME }}:${{ env.REPO_TAG }}

      - name: Env build
        run: |
          docker exec ${{ env.CONTAINER_NAME }} \
          bash /intel-extension-for-transformers/.github/workflows/script/prepare_env.sh

      - name: Binary build
        run: |
          docker exec ${{ env.CONTAINER_NAME }} \
          bash -c "cd /intel-extension-for-transformers/.github/workflows/script \
          && bash install_binary.sh"

      - name: Download artifact
        id: download-artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{secrets.GITHUB_TOKEN}}
          workflow: model-test.yml
          run_id: ${{ inputs.ref_id }}
          name: summary.log
          name_is_regexp: true
          repo: ${{ github.repository }}
          check_artifacts: false
          search_artifacts: false
          skip_unpack: false
          if_no_artifact_found: warn

      - name: Display structure of downloaded files
        run: ls -R

      - name: Tuning
        if: ${{ inputs.framework == "optimize" }}
        run: |
            docker exec ${{ env.CONTAINER_NAME }} \
            bash -c "cd /intel-extension-for-transformers/.github/workflows/scripts/models \
            && bash run_${{ inputs.framework }}.sh --model=${{ inputs.modelName }} --mode='tuning'"
      
      - name: INT8 Benchmark
        run: |
            docker exec exec ${{ env.CONTAINER_NAME }} \
            bash -c "cd /intel-extension-for-transformers/.github/workflows/scripts/models \
            && bash run_${{ inputs.framework }}.sh --model=${{ inputs.modelName }} --mode='int8_benchmark'"
      
      - name: FP32 Benchmark
        run: |
            docker exec exec ${{ env.CONTAINER_NAME }} \
            bash -c "cd /intel-extension-for-transformers/.github/workflows/scripts/models \
            && bash run_${{ inputs.framework }}.sh --model=${{ inputs.modelName }} --mode='fp32_benchmark'"

      - name: Collect Log
        run: |
            docker exec exec ${{ env.CONTAINER_NAME }} \
            bash -c "cd /intel-extension-for-transformers/.github/workflows/scripts/models \
            && bash run_${{ inputs.framework }}.sh --model=${{ inputs.modelName }} --mode='collect_log' --BUILD_BUILDID=${{ github.run_id }}"
    
      - name: Publish pipeline artifact
        uses: actions/upload-artifact@v3
        if: ${{ !cancelled() }}
        with:
          name: Optimize Unit Test
          path: ${{ github.workspace }}/log_dir

      - name: Docker clean up
        if: ${{ always() }}
        run: |
          docker exec ${{ env.CONTAINER_NAME }} bash -c "rm -fr /intel-extension-for-transformers/* && rm -fr /intel-extension-for-transformers/.* || true"


